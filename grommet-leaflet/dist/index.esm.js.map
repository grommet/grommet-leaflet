{
  "version": 3,
  "sources": ["../src/layers/Cluster/Cluster.jsx", "../src/utils.js", "../src/layers/Controls/Controls.jsx", "../src/layers/Map/Map.jsx", "../src/themes/base.js", "../src/layers/Marker/Marker.jsx", "../src/layers/MarkerCluster/MarkerCluster.jsx", "../src/layers/Pin/Pin.jsx", "../src/layers/Popup/Popup.jsx", "../src/index.js"],
  "sourcesContent": ["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { ThemeContext } from 'styled-components';\nimport { Box, Text } from 'grommet';\nimport { normalizeTheme } from '../../utils';\n\nconst StyledContainer = styled(Box)`\n  // translate to re-align with leaflet div\n  transform: translateX(-35%);\n  &:hover {\n    transform: translateX(-35%) scale(1.1);\n    transition: transform 0.4s;\n  }\n`;\n\nconst StyledLabel = styled(Text)`\n  // multiplier of font-size, for tighter alignment\n  line-height: 1rem;\n`;\n\nconst Cluster = ({ cluster, kind = 'default', size = 'medium', ...rest }) => {\n  const theme = React.useContext(ThemeContext);\n  const normalizedTheme = normalizeTheme([\n    theme?.map?.cluster?.size?.medium,\n    theme?.map?.cluster?.size?.[size],\n    theme?.map?.cluster?.default,\n    theme?.map?.cluster?.[kind],\n  ]);\n\n  const count = cluster.getChildCount();\n\n  const icon = theme?.map?.cluster?.[kind]?.icon;\n  const label = count;\n\n  return (\n    <StyledContainer {...normalizedTheme?.container} {...rest}>\n      {icon}\n      <StyledLabel {...normalizedTheme?.label}>{label}</StyledLabel>\n    </StyledContainer>\n  );\n};\n\nCluster.propTypes = {\n  cluster: PropTypes.object,\n  kind: PropTypes.string,\n  size: PropTypes.string,\n};\n\nexport { Cluster };\n", "import { deepMerge } from 'grommet/utils';\n\nexport const normalizeTheme = themeObjects => {\n  let result = {};\n  themeObjects.forEach(themeObject => {\n    result = deepMerge(result, themeObject);\n  });\n  return result;\n};\n", "import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport { Box, Button } from 'grommet';\nimport { Add, Subtract, Globe } from 'grommet-icons';\n\nexport const LocationBounds = ({ locations }) => {\n  const bounds = L.latLngBounds();\n\n  // features property indicates GeoJSON\n  if (locations.features) {\n    locations.features.forEach(location => {\n      bounds.extend([\n        location.geometry?.coordinates[0],\n        location.geometry?.coordinates[1],\n      ]);\n    });\n  } else {\n    locations.forEach(location => {\n      bounds.extend([location?.[0], location?.[1]]);\n    });\n  }\n\n  return bounds;\n};\n\nconst flyToBoundsDuration = 1.5;\n\nconst Controls = ({ locations }) => {\n  const map = useMap();\n  const bounds = locations && LocationBounds({ locations });\n\n  // on mount, zoom to the bounds of the locations\n  if (bounds) {\n    if (\n      JSON.stringify(bounds._northEast) === JSON.stringify(bounds._southWest)\n    ) {\n      // if the bounds are the same, zoom to the bounds of the locations\n    } else {\n      map.flyToBounds(bounds, { duration: flyToBoundsDuration });\n    }\n  }\n\n  return (\n    // css classes are coming from https://github.com/Leaflet/Leaflet/blob/main/dist/leaflet.css\n    <Box className=\"leaflet-bottom leaflet-right\">\n      <Box className=\"leaflet-control\">\n        <Box elevation=\"large\" round=\"medium\" background=\"background\">\n          <Button\n            a11yTitle=\"Zoom in\"\n            icon={<Add />}\n            onClick={event => {\n              event.preventDefault();\n              map.zoomIn();\n            }}\n          />\n          <Button\n            a11yTitle=\"Zoom out\"\n            icon={<Subtract />}\n            onClick={event => {\n              event.preventDefault();\n              map.zoomOut();\n            }}\n          />\n          <Box\n            border={{\n              color: 'border-weak',\n              side: 'top',\n            }}\n          >\n            {bounds && (\n              <Button\n                a11yTitle=\"Zoom to data\"\n                icon={<Globe />}\n                onClick={event => {\n                  event.preventDefault();\n                  map.flyToBounds(bounds, { duration: 1.5 });\n                }}\n              />\n            )}\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nControls.propTypes = {\n  locations: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n};\n\nexport { Controls };\n", "import React, { forwardRef, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { MapContainer, TileLayer, AttributionControl } from 'react-leaflet';\nimport styled, { ThemeContext } from 'styled-components';\nimport { deepMerge } from 'grommet/utils';\nimport { base } from '../../themes';\n\nconst StyledMapContainer = styled(MapContainer)`\n  ${({ theme }) => {\n    return `\n      font-family: ${theme.global.font.family};\n      height: 100%;\n    `;\n  }}\n`;\n\nconst Map = forwardRef(\n  (\n    {\n      center = [0, 0],\n      children,\n      scrollWheelZoom = true,\n      tileLayer,\n      theme,\n      zoom = 1,\n      zoomControl = false,\n      ...rest\n    },\n    ref,\n  ) => {\n    // grab grommet theme from the application\n    const appTheme = useContext(ThemeContext);\n    // merge map theme and caller's theme into app theme\n    const mapTheme = deepMerge(appTheme, { map: deepMerge(base, theme) });\n\n    return (\n      <ThemeContext.Provider value={mapTheme}>\n        <StyledMapContainer\n          attributionControl={false}\n          center={center}\n          ref={ref}\n          scrollWheelZoom={scrollWheelZoom}\n          zoom={zoom}\n          zoomControl={zoomControl}\n          {...rest}\n        >\n          <AttributionControl position=\"bottomright\" prefix={false} />\n          <TileLayer attribution={tileLayer.attribution} url={tileLayer.url} />\n          {children}\n        </StyledMapContainer>\n      </ThemeContext.Provider>\n    );\n  },\n);\n\nMap.propTypes = {\n  center: PropTypes.array,\n  children: PropTypes.any,\n  scrollWheelZoom: PropTypes.string || PropTypes.bool,\n  tileLayer: PropTypes.shape({\n    attribution: PropTypes.string,\n    url: PropTypes.string.isRequired,\n  }).isRequired,\n  theme: PropTypes.object,\n  zoom: PropTypes.number,\n  zoomControl: PropTypes.bool,\n};\n\nexport { Map };\n", "import { deepMerge } from 'grommet/utils';\n\nconst defaultKinds = {\n  default: {\n    container: {\n      // any box props\n      align: 'center',\n      justify: 'center',\n      background: 'background-front',\n      border: {\n        color: 'border',\n        size: 'small',\n      },\n      elevation: 'medium',\n      flex: false,\n      round: 'full',\n    },\n    // icon: undefined,\n  },\n};\n\nconst markerKinds = deepMerge(defaultKinds, {\n  default: {\n    container: {\n      height: { min: '25px', max: '25px' },\n      width: { min: '25px', max: '25px' },\n    },\n  },\n});\n\nconst base = {\n  pin: {\n    ...markerKinds,\n  },\n  cluster: {\n    ...defaultKinds,\n    size: {\n      small: {\n        container: {\n          height: { min: '36px', max: '36px' },\n          width: { min: '36px', max: '36px' },\n        },\n        label: {\n          // any text props\n          size: 'small',\n        },\n      },\n      medium: {\n        container: {\n          direction: 'row-reverse',\n          gap: 'xxsmall',\n          height: { min: '48px', max: '48px' },\n          width: { min: '48px', max: '48px' },\n        },\n        label: {\n          color: 'text-strong',\n          size: 'medium',\n          weight: 500,\n        },\n      },\n      large: {\n        container: {\n          direction: 'row-reverse',\n          gap: 'xxsmall',\n          height: { min: '54px', max: '54px' },\n          width: { min: '54px', max: '54px' },\n        },\n        label: {\n          size: 'medium',\n        },\n      },\n    },\n  },\n  popup: {\n    background: 'background-front',\n    border: { color: 'border-weak', size: 'xsmall' },\n    gap: 'xsmall',\n    margin: 'none',\n    pad: 'small',\n    round: 'xsmall',\n  },\n};\n\nexport { base };\n", "import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOMServer from 'react-dom/server';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ThemeContext } from 'styled-components';\nimport { Marker as LeafletMarker, Popup as LeafletPopup } from 'react-leaflet';\nimport L from 'leaflet';\nimport { Pin, Popup } from '..';\n\nconst Marker = ({ icon, popup: popupProp, ...rest }) => {\n  const theme = useContext(ThemeContext);\n  const kind = icon?.props?.kind;\n\n  const popup = popupProp ? (\n    <LeafletPopup>\n      <Popup>{popupProp}</Popup>\n    </LeafletPopup>\n  ) : undefined;\n\n  return (\n    <LeafletMarker\n      // https://react-leaflet.js.org/docs/start-introduction/#limitations\n      // The components exposed are abstractions for Leaflet layers, not DOM elements.\n      // Some of them have properties that can be updated directly by calling the setters exposed by Leaflet while others\n      // should be completely replaced, by setting an unique value on their key property so they are properly\n      // handled by React's algorithm.\n      key={uuidv4()}\n      icon={L.divIcon({\n        // 'grommet-marker' class prevents leaflet default divIcon styles\n        className: 'grommet-marker',\n        html: ReactDOMServer.renderToString(\n          <ThemeContext.Provider value={theme}>\n            {icon || <Pin />}\n          </ThemeContext.Provider>,\n        ),\n      })}\n      kind={kind}\n      {...rest}\n    >\n      {popup}\n    </LeafletMarker>\n  );\n};\n\nMarker.propTypes = {\n  icon: PropTypes.node,\n  popup: PropTypes.node,\n};\n\nexport { Marker };\n", "import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport {\n  createElementObject,\n  createPathComponent,\n  extendContext,\n} from '@react-leaflet/core';\nimport L from 'leaflet';\nimport 'leaflet.markercluster';\nimport ReactDOMServer from 'react-dom/server';\nimport { Cluster, Popup } from '..';\n\nconst createMarkerClusterGroup = ({ ...rest }, context) => {\n  const markerClusterGroup = new L.MarkerClusterGroup({\n    showCoverageOnHover: false,\n    zoomToBoundsOnClick: false,\n    ...rest,\n  });\n  return createElementObject(\n    markerClusterGroup,\n    extendContext(context, { layerContainer: markerClusterGroup }),\n  );\n};\n\nconst LeafletMarkerCluster = createPathComponent(createMarkerClusterGroup);\n\nconst MarkerCluster = ({ icon: iconProp, popup: popupProp, ...rest }) => {\n  const theme = useContext(ThemeContext);\n  return (\n    <LeafletMarkerCluster\n      iconCreateFunction={cluster => {\n        if (popupProp) {\n          const popup = cluster.bindPopup(\n            ReactDOMServer.renderToString(\n              <ThemeContext.Provider value={theme}>\n                <Popup>{popupProp({ cluster })}</Popup>\n              </ThemeContext.Provider>,\n            ),\n          );\n\n          cluster.on('click', () => {\n            popup.openPopup();\n          });\n        }\n\n        return L.divIcon({\n          // 'grommet-cluster-group' class prevents\n          // leaflet default divIcon styles\n          className: 'grommet-cluster-group',\n          html: ReactDOMServer.renderToString(\n            <ThemeContext.Provider value={theme}>\n              {iconProp ? (\n                React.cloneElement(iconProp({ cluster }), {\n                  cluster,\n                })\n              ) : (\n                <Cluster cluster={cluster} />\n              )}\n            </ThemeContext.Provider>,\n          ),\n        });\n      }}\n      {...rest}\n    />\n  );\n};\n\nMarkerCluster.propTypes = {\n  icon: PropTypes.func,\n  popup: PropTypes.func,\n};\n\nexport { MarkerCluster };\n", "import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Box, ThemeContext } from 'grommet';\nimport { normalizeTheme } from '../../utils';\n\nconst StyledBox = styled(Box)`\n  // to create the pin shape\n  border-bottom-right-radius: 0;\n  // translate to re-align with leaflet div\n  transform: rotate(45deg) translateX(-35%);\n  &:hover {\n    transform: rotate(45deg) translateX(-35%) scale(1.1);\n    transition: transform 0.4s;\n  }\n`;\n\nconst Pin = ({ kind = 'default' }) => {\n  const theme = React.useContext(ThemeContext);\n  const normalizedTheme = normalizeTheme([\n    theme?.map?.pin?.default?.container,\n    theme?.map?.pin?.[kind]?.container,\n  ]);\n\n  let icon = theme?.map?.pin?.[kind]?.icon;\n  if (icon) {\n    icon = React.cloneElement(icon, {\n      // style needed to offset for rotation of location pin so\n      // icon is vertical\n      style: { transform: 'rotate(-45deg)' },\n    });\n  }\n\n  return <StyledBox {...normalizedTheme}>{icon}</StyledBox>;\n};\n\nPin.propTypes = {\n  kind: PropTypes.string,\n};\n\nexport { Pin };\n", "import React, { useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { Box } from 'grommet';\nimport '../../grommet-leaflet-reset.css';\n\nconst Popup = ({ ...rest }) => {\n  const theme = useContext(ThemeContext);\n  return <Box {...theme?.map?.popup} {...rest} />;\n};\n\nexport { Popup };\n", "'use client';\n\n/* \nIgnore the useLayoutEffect warning from react. This warning should \nbe removed in the next react release and we can remove this code.\nReact PR to remove error: https://github.com/facebook/react/pull/26395.\nThis solution came from a Stack overflow suggestion:\nhttps://stackoverflow.com/questions/64158705/ignore-certain-console-errors-warnings-in-react\n*/\nwindow.console = console;\n\nconst consoleError = console.error;\nconst SUPPRESSED_WARNINGS = [\n  'useLayoutEffect does nothing on the server, because its effect cannot',\n];\n\nconsole.error = function filterWarnings(msg, ...args) {\n  if (!SUPPRESSED_WARNINGS.some(entry => msg.includes(entry))) {\n    consoleError(msg, ...args);\n  }\n};\n\nexport * from './layers';\nexport * from './utils';\nexport * from './themes';\n"],
  "mappings": "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",
  "names": ["React", "PropTypes", "styled", "ThemeContext", "Box", "Text", "deepMerge", "normalizeTheme", "themeObjects", "result", "themeObject", "StyledContainer", "styled", "Box", "StyledLabel", "Text", "Cluster", "cluster", "kind", "size", "rest", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "_k", "_l", "_m", "theme", "React", "ThemeContext", "normalizedTheme", "normalizeTheme", "count", "icon", "label", "PropTypes", "React", "PropTypes", "useMap", "L", "Box", "Button", "Add", "Subtract", "Globe", "LocationBounds", "locations", "bounds", "location", "_a", "_b", "flyToBoundsDuration", "Controls", "map", "event", "React", "forwardRef", "useContext", "PropTypes", "MapContainer", "TileLayer", "AttributionControl", "styled", "ThemeContext", "deepMerge", "deepMerge", "defaultKinds", "markerKinds", "base", "StyledMapContainer", "styled", "MapContainer", "theme", "Map", "forwardRef", "center", "children", "scrollWheelZoom", "tileLayer", "zoom", "zoomControl", "rest", "ref", "appTheme", "useContext", "ThemeContext", "mapTheme", "deepMerge", "base", "React", "AttributionControl", "TileLayer", "PropTypes", "React", "useContext", "PropTypes", "ReactDOMServer", "uuidv4", "ThemeContext", "LeafletMarker", "LeafletPopup", "L", "Marker", "icon", "popupProp", "rest", "_a", "theme", "useContext", "ThemeContext", "kind", "popup", "React", "LeafletPopup", "Popup", "LeafletMarker", "uuidv4", "L", "ReactDOMServer", "Pin", "PropTypes", "React", "useContext", "PropTypes", "ThemeContext", "createElementObject", "createPathComponent", "extendContext", "L", "ReactDOMServer", "createMarkerClusterGroup", "rest", "context", "markerClusterGroup", "L", "createElementObject", "extendContext", "LeafletMarkerCluster", "createPathComponent", "MarkerCluster", "iconProp", "popupProp", "theme", "useContext", "ThemeContext", "React", "cluster", "popup", "ReactDOMServer", "Popup", "Cluster", "PropTypes", "React", "PropTypes", "styled", "Box", "ThemeContext", "StyledBox", "styled", "Box", "Pin", "kind", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "theme", "React", "ThemeContext", "normalizedTheme", "normalizeTheme", "icon", "PropTypes", "React", "useContext", "ThemeContext", "Box", "Popup", "rest", "_a", "theme", "useContext", "ThemeContext", "React", "Box", "consoleError", "SUPPRESSED_WARNINGS", "msg", "args", "entry"]
}
